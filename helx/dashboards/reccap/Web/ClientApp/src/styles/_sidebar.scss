// Define a mixin that accepts a theme and outputs the theme-specific styles.
@mixin sidebar-theme($theme) {
  // Extract the palettes you need from the theme definition.
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  $radius: 0.5rem;
  $height: 48px;
  $padding-left-base: 2rem + 1rem + 0.5rem; //  Icon padding + icon width + level 0 indent
  $padding-left-step: 0.5rem;

  // Define any styles affected by the theme.
  .sidebar {
    // @include mat-elevation(1);
    background-color: mat-color($background, text);
    color: mat-color($foreground, text);

    margin: 0;

    .mat-nav-list .mat-list-item.search .mat-list-item-content {
      border-bottom: 1px solid;
      background-color: mat-color($background, 0.5);

      input {
        height: $height;
        margin: 0.25rem 0.5rem;
      }
    }

    .mat-list-base {
      padding-top: 0px;
    }

    .mat-drawer-inner-container {
      overflow: visible;
      height: auto;
    }

    .mat-nav-list .mat-list-item {
      height: auto;
      // margin: 0.25rem 0;
      margin: 0;

      &:hover {
        //  Disable default behavior
        background-color: transparent;
      }

      .mat-list-item-content {
        display: block;
        padding: 0px 0px;
        user-select: none;

        a {
          height: $height;
          margin: 0.25rem 0.5rem;

          align-items: center;
          display: flex;

          color: mat-color($foreground, text);
          .fal:not(.dd-icon) {
            margin: 0 1rem;
          }
          .fal {
            color: mat-color($foreground, text);
          }

          .dd-icon {
            margin: 0 0.5rem;
            transition: 0.2s ease-in;
          }
          &.selected-item {
            background-color: mat-color($primary, 400, 0.12);
          }
          &:hover {
            background-color: mat-color($primary, 400, 0.06);
          }
        }
      }

      .mat-nav-list {
        // display: none;
        // height: 0;
        overflow: hidden;
        a {
          padding-left: $padding-left-base + 0 * $padding-left-step;
        }
        .mat-nav-list a {
          padding-left: $padding-left-base + 1 * $padding-left-step;
        }
        &.expanded {
          // display: block;
        }
      }

      .selected-parent {
        // background-color: mat-color($primary, 400, 0.09);
        .dd-icon {
          -webkit-transform: rotate(-180deg);
          transform: rotate(-180deg);
        }
      }
    }

    .separator {
      border-top: 1px solid;
      padding-top: 0.75rem;
      background-color: mat-color($background, 0.5);
      text-align: center;
    }

    .label {
      padding: 0.125rem 0.3rem;
      line-height: 13px;
      color: $white;
      font-weight: 400;
      border-radius: $radius;
      font-size: 75%;
      color: mat-contrast($primary, 200);
      background-color: mat-color($primary, 200);

      &.label-success {
        // background-color: red;
      }
      &.label-warning {
        // background-color: red;
      }
      &.label-error {
        // background-color: red;
      }
    }
  }
}
@mixin sidebar-typography($config) {
  .sidebar {
    font: {
      family: mat-font-family($config, body-1);
      size: mat-font-size($config, body-1);
      weight: mat-font-weight($config, body-1);
    }
  }
}
