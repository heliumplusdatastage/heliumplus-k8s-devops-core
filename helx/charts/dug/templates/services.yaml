apiVersion: v1
items:
  # Elastic service
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: {{ .Values.elasticsearch.app_name }}
    name: {{ .Values.elasticsearch.service.name }}
  spec:
    ports:
      - name: elastic-rest-port
        protocol: TCP
        port: {{ .Values.elasticsearch.rest_port }}
        targetPort: {{ .Values.elasticsearch.rest_port }}
      # If this needs to join an elastic cluster.
      - name: elastic-nodes-com-port
        protocol: TCP
        port: {{ .Values.elasticsearch.nodes_com_port }}
        targetPort: {{ .Values.elasticsearch.nodes_com_port }}
    selector:
      app: {{ .Values.elasticsearch.app_name }}
    clusterIP: None
  # Neo4j Service
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: {{ .Values.neo4j.app_name }}
    name: {{ .Values.neo4j.service.name }}
  spec:
    ports:
      - name: neo4j-http-port
        protocol: TCP
        port: {{ .Values.neo4j.http_port }}
        targetPort: {{ .Values.neo4j.http_port }}
      - name: neo4j-https-port
        protocol: TCP
        port: {{ .Values.neo4j.https_port }}
        targetPort: {{ .Values.neo4j.https_port }}
      - name: neo4j-bolt-port
        protocol: TCP
        port: {{ .Values.neo4j.bolt_port }}
        targetPort: {{ .Values.neo4j.bolt_port }}
    selector:
      app: {{ .Values.neo4j.app_name }}
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      getambassador.io/config: |
        ---
        apiVersion: ambassador/v1
        kind: Mapping
        name: {{ .Values.web.ambassador.search.map_name }}
        prefix: {{ .Values.web.ambassador.search.prefix }}
        service: {{ .Values.web.service.name }}:{{ .Values.web.api_port }}
        rewrite: {{ .Values.web.ambassador.search.prefix }}
        cors:
          origins: "*"
          methods: POST, OPTIONS
          headers:
            - Content-Type
        ---
        apiVersion: ambassador/v1
        kind: Mapping
        name: {{ .Values.web.ambassador.search_kg.map_name }}
        prefix: {{ .Values.web.ambassador.search_kg.prefix }}
        service: {{ .Values.web.service.name }}:{{ .Values.web.api_port }}
        rewrite: {{ .Values.web.ambassador.search_kg.prefix }}
        cors:
          origins: "*"
          methods: POST, OPTIONS
          headers:
            - Content-Type
    labels:
      app: {{ .Values.web.app_name }}
    name: {{ .Values.web.service.name }}
  spec:
    ports:
      - name: api-port
        protocol: TCP
        port: {{ .Values.web.api_port }}
        targetPort: {{ .Values.web.api_port }}
    selector:
      app: {{ .Values.web.app_name }}
    type: {{ .Values.web.service.type }}
  # dug-search-client
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      getambassador.io/config: |
        ---
        apiVersion: ambassador/v1
        kind: Mapping
        name: {{ .Values.search_client.ambassador.ui.map_name }}
        prefix: {{ .Values.search_client.ambassador.ui.prefix }}
        service: {{ .Values.search_client.service.name }}:{{ .Values.search_client.http_port }}
    labels:
      app: {{ .Values.search_client.app_name }}
    name: {{ .Values.search_client.service.name }}
  spec:
    ports:
      - name: search-client-port
        protocol: TCP
        port: {{ .Values.search_client.http_port }}
        targetPort: {{ .Values.search_client.container_port }}
    selector:
      app: {{ .Values.search_client.app_name }}
    type: ClusterIP
  # dug-nboost
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: {{ .Values.nboost.app_name }}
    name: {{ .Values.nboost.service.name }}
  spec:
    ports:
      - name: dug-nboost-port
        protocol: TCP
        port: {{ .Values.nboost.api_port }}
        targetPort: {{ .Values.nboost.api_port }}
    selector:
      app: {{ .Values.nboost.app_name }}
    type: ClusterIP
kind: List
